<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.mybatisproject.domain.board.repository.BoardRepository">
    <select id="getBoardList" parameterType="study.mybatisproject.api.common.framework.paging.domain.PageRequestParam"
            resultType="study.mybatisproject.domain.board.entity.Board">
    select
        b.board_id,
        b.board_type,
        b.title,
        b.content,
        b.reg_date
    from t_board b
    <where>
        <!-- @를 사용하면 JAVA의 static method 접근이 가능하다. -->
        <!-- 제목에 대한 키워드 검색 -->
        <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(parameter.keyword)">
            and b.title like concat('%', #{parameter.keyword}, '%')
        </if>

        <!-- 게시판 종류에 따른 배열 검색 -->
        <!-- 배열의 null 체크 시에는 commons.langs의 ObjectUtils 사용하기 -> 근데 찾아본 결과 현재는 사용이 안 된다.-->
        <!-- 그래서 enum 타입을 toString으로 변경한 다음 StringUtils로 널 체크를 진행하였다...! ㅠ_ㅠ-->
        <!-- 근데 이러면 애초에 boardType이 비어있는 경우 toString이 먹지를 않아서... 이부분에 대해서도 생각해봐야 할 것 같다.-->
        <if test="parameter.boardTypes != null">
            <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(parameter.boardTypes.toString())">
                and b.board_type in (
                <!-- boardTypes를 foreach로 순회하며 value로 접근한다는 의미. -->
                <foreach collection="parameter.boardTypes" item="value" separator=",">
                    #{value}
                </foreach>
                )
            </if>
        </if>
    </where>
    order by b.reg_date desc
    <!-- 페이징 쿼리 -->
    limit #{pageRequest.limit}, #{pageRequest.offset}
    </select>

    <select id="getBoard" parameterType="int"
            resultType="study.mybatisproject.domain.board.entity.Board">
        select
            b.board_id,
            b.board_type,
            b.title,
            b.content,
            b.reg_date
        from t_board b
        where b.board_id = #{boardId}
    </select>

    <!-- useGeneratedKey를 통해 insert 이후 boardId가 자동으로 증가하도록 설정.-->
    <insert id="save" parameterType="study.mybatisproject.api.controller.dto.BoardRequest"
    useGeneratedKeys="true" keyProperty="boardId">
        insert into t_board
        (
         board_type,
         title,
         content,
         reg_date
        )
        values
        (
            #{boardType.code},
            #{title},
            #{content},
            NOW()
        )
    </insert>

    <update id="update" parameterType="study.mybatisproject.api.controller.dto.BoardRequest">
        update t_board
        set
            board_type = #{boardType.code},
            title = #{title},
            content = #{content}
        where board_id = #{boardId}
    </update>


    <delete id="delete" parameterType="int">
        delete from t_board
        where board_id = #{boardId}
    </delete>

    <insert id="saveList" parameterType="map">
        insert into t_board (
             title,
             content,
             reg_date
        )
        values
        <!-- 여기서 boardList는 파라미터 타입이 map일 때 key의 이름을 말한다. -->
        <!-- 각각의 반복문이 돌면서 item="board"라고 지정 후 구분자로 ,를 두었다. -->
        <foreach collection="boardList" item="board" separator=",">
            (
                #{board.title},
                #{board.content},
                NOW()
            )
        </foreach>
    </insert>
    
</mapper>

